@model ConventionManager.Models.EventAndSubscription

@{
    ViewData["Title"] = "Details";
}

<h1>Details of this Event</h1>

@if (TempData["SubscriptionCollision"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["SubscriptionCollision"]</p>
}
@if (TempData["NoMoreVacancies"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["NoMoreVacancies"]</p>
}
@if (TempData["NoModeratorYet"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["NoModeratorYet"]</p>
}
<div>
    <h4>Chat Event</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.StartDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.StartDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.EndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.EndDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Topic)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Topic)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Conference)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Conference.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Room)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Room.Name)
        </dd>
        <dt class="col-sm-2">
            Moderator
        </dt>
        <dd class = "col-sm-10">
            @if (Model.ChatEvent.ModeratorId != "0")
            {
                <a asp-controller="User" asp-action="ShowProfile" asp-route-userName="@Model.Moderator.UserName">
                    @Model.Moderator.FirstName @Model.Moderator.LastName (@Model.Moderator.UserName)
                </a>
            }
            else 
            {
                <a>No moderador has joined yet.</a>
            }
        </dd>
        <dt class = "col-sm-2">
            Vacancies
        </dt>
        <dd class = "col-sm-10">
            @if (Model.ChatEvent.ModeratorId == "0")
            {
                @Model.ExhibitorEvent.Room.GetVacancies(Model.ExhibitorEvent)
            }
            else
            {
                @Model.ExhibitorEvent.Room.GetVacancies(Model.ExhibitorEvent, true)
            }
        </dd>
    </dl>
</div>
<div>
    @if (Model.ChatEvent.ModeratorId != Model.UserId)
    {
        <partial name="../_ExhibitorSubscribeConditions.cshtml" />
    }
    @if (!Model.ExhibitorEvent.Subscriptions.Contains(Model.Subscription))
    {
        @if (Model.ChatEvent.ModeratorId == "0" || Model.ChatEvent.ModeratorId == Model.UserId)
        {
            <br/>
            if (Model.ChatEvent.ModeratorId == "0")
            {
                <a asp-action="AddModerator" asp-route-id="@Model.ExhibitorEvent.Id" class="btn rounded-sm btn-primary mt-2">Join as Moderator</a>
            }
            else
            {
                <a asp-action="RemoveModerator" asp-route-id="@Model.ExhibitorEvent.Id" class="btn rounded-sm btn-danger mt-2">Quit as Moderator</a>
            }
        }
    }
    <br/>
     @if (User.IsInRole("Organizer") || User.IsInRole("Exhibitor"))
     {
         <partial name="../_ExhibitorNotificationPopup.cshtml" />
     }
     <br />
     @if (User.IsInRole("Organizer"))
     {
         <a asp-action="Edit" asp-route-id="@Model.ExhibitorEvent.Id" class="btn rounded-sm btn-success">Edit</a>
     }
    <a href="javascript:void(0);" onclick="history.go(-1);" class="btn rounded-sm btn-light">Go Back</a>
</div>
