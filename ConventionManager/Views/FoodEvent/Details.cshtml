@model ConventionManager.Models.EventAndSubscription

@{
    ViewData["Title"] = "Details";
}

<h1>Details of this Event</h1>

@if (TempData["SubscriptionCollision"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["SubscriptionCollision"]</p>
}
@if (TempData["NoMoreVacancies"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["NoMoreVacancies"]</p>
}
@if (TempData["FeedbackRequest"] != null)
{
 <p class="alert alert-info rounded-sm alert-dismissible" id="errorMessage">@TempData["FeedbackRequest"]</p>
}

<div class="row">
    <div class="col-sm-6">
        <h4>Food Event</h4>
    </div>
    <div class="col-sm-6">
        <a asp-controller="Event" asp-action="ShowStatistics" class="btn rounded-sm btn-info" asp-route-id="@Model.FoodEvent.Id">Show Statistics</a>
        @if (User.IsInRole("Organizer"))
         {
             <a asp-action="Edit" asp-route-id="@Model.FoodEvent.Id" class="btn rounded-sm btn-success">Edit</a>
         }
        <a href="javascript:void(0);" onclick="history.go(-1);" class="btn rounded-sm btn-light">Go Back</a>
    </div>
</div>

<div class="row">
    <div class="col-sm-6">
        <div>
            <hr />
            <dl>
                <dt>
                    @Html.DisplayNameFor(model => model.Event.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Event.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Event.StartDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Event.StartDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Event.EndDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Event.EndDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Event.Conference)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Event.Conference.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Event.Room)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Event.Room.Name)
                </dd>
                <dt>
                    Vacancies
                </dt>
                <dd>
                    @Model.Event.Room.GetVacancies(Model.Event)
                </dd>
                <dt>
                    Menu
                </dt>
                <dd>
                    <button class="btn rounded-sm btn-dark" id="myBtn2">Show Menu</button>
                    <div id="myModal2" class="modal2">
                        <div class="rounded-sm modal2-content">
                            @if (Model.FoodEvent.Menu.Count() > 0)
                            {
                                <h3>Menu<span class="close2">&times;</span></h3>
                                <ul>
                                    @foreach (Food food in Model.FoodEvent.Menu)
                                    {
                                        <li>@food.Name (@food.TypeOfFood)<details>@food.Description</details></li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>There isn't anything in the menu yet.<span class="close2">&times;</span></p>
                            }
                        </div>
                    </div>
                </dd>
            </dl>
        </div>
    </div>
    @if (User.IsInRole("Organizer"))
    {
        <div class="col-sm-6">
            <a asp-controller="FoodEvent" asp-action="CreateFood" asp-route-foodEventId="@Model.Event.Id" class="btn rounded-sm btn-info">Add Food to Menu</a>
        </div>
    }
</div>
<div>
    @if (!Model.Event.Subscriptions.Contains(Model.Subscription))
    {
        <a asp-controller="AttendantSubscription" asp-action="CreateSubscription" asp-route-eventId="@Model.Event.Id" class="btn rounded-sm btn-primary">Join Event</a>
    }
    else
    {
        <a asp-controller="AttendantSubscription" asp-action="DeleteSubscription" asp-route-eventId="@Model.Event.Id" class="btn rounded-sm btn-danger">Quit Event</a>
    }
    <br/>
    @if (User.IsInRole("Organizer") || User.IsInRole("Exhibitor"))
    {
        <partial name="../_AttendantNotificationPopup.cshtml" />
    }
    <partial name="../_EventFeedbackPopup.cshtml" />
    <br />
</div>
