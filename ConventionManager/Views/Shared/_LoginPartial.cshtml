@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-link">
        <div>
            <a asp-controller="User" asp-action="ShowProfile" asp-route-userName="@UserManager.GetUserName(User)">Hello @UserManager.GetUserName(User)</a>
        </div>
    </li>
    <li class="w3-xlarge"><i class="fa fa-user" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></i>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
            <a class="dropdown-item" asp-controller="User" asp-action="ShowProfile" asp-route-userName="@UserManager.GetUserName(User)">My Profile</a>
            <a class="dropdown-item" asp-controller="Itinerary" asp-action="ShowItinerary">My Itinerary</a>
            <a class="dropdown-item" asp-controller="Notification" asp-action="Index">My Notifications</a>
            <div class="dropdown-divider"></div>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </div>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>

@if (SignInManager.IsSignedIn(User))
{
    <form asp-controller="Search" asp-action="GlobalSearch" id="demo-2" class="form-inline my-2 my-lg-0">
	    <input type="search" name="searchString" placeholder="Search">
    </form>
}
