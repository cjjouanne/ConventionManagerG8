@model ConventionManager.Models.EventAndSubscription

@{
    ViewData["Title"] = "Details";
}

<h1>Details of this Event</h1>

@if (TempData["SubscriptionCollision"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["SubscriptionCollision"]</p>
}
@if (TempData["NoMoreVacancies"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["NoMoreVacancies"]</p>
}
@if (TempData["FeedbackRequest"] != null)
{
 <p class="alert alert-info rounded-sm alert-dismissible" id="errorMessage">@TempData["FeedbackRequest"]</p>
}
<div>
    <h4>Talk Event</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.StartDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.StartDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.EndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.EndDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Topic)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Topic)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Conference)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Conference.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExhibitorEvent.Room)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExhibitorEvent.Room.Name)
        </dd>
        <dt class = "col-sm-2">
            Vacancies
        </dt>
        <dd class = "col-sm-10">
            @Model.ExhibitorEvent.Room.GetVacancies(Model.ExhibitorEvent)
        </dd>
        <dd class = "col-sm-2">
            <a asp-controller="Event" asp-action="ShowStatistics" asp-route-id="@Model.ExhibitorEvent.Id">Show Statistics</a>
        </dd>
    </dl>
</div>
<div>
    <partial name="../_ExhibitorSubscribeConditions.cshtml" />
    <br/>
     @if (User.IsInRole("Organizer") || User.IsInRole("Exhibitor"))
     {
         <partial name="../_ExhibitorNotificationPopup.cshtml" />
     }
    <partial name="../_EventFeedbackPopup.cshtml" /> 
    <partial name="../_ExhibitorFeedbackPopup.cshtml" />
    <br/>
    @if (User.IsInRole("Organizer"))
    {
        <a asp-action="Edit" asp-route-id="@Model.ExhibitorEvent.Id" class="btn rounded-sm btn-success">Edit</a>
    }
    <a href="javascript:void(0);" onclick="history.go(-1);" class="btn rounded-sm btn-light">Go Back</a>
</div>
