@model ConventionManager.Models.ConferenceEventAndRoom

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@if (TempData["DateOutOfRange"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["DateOutOfRange"]</p>
}
@if (TempData["EventCollision"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["EventCollision"]</p>
}
@if (TempData["CannotDeleteEvent"] != null)
{
 <p class="alert alert-warning rounded-sm alert-dismissible" id="errorMessage">@TempData["CannotDeleteEvent"]</p>
}

<div>
    <h4>Room</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Capacity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Capacity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Location)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Location)
        </dd>
        <dt class="col-sm-2">Map</dt>
        <dd class="col-sm-10">
            <div id="map" style="height:300px; width:80%;"></div>
            <script>
              var map;
              function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                  center: { lat: @Model.Room.Latitude, lng: @Model.Room.Longitude },
                  zoom: 17
                });
              }
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoQviHD74fMrNVYyhtr1Obhf7zuTeBzfA&callback=initMap"
            async defer></script>
        </dd>
    </dl>
</div>
<div>
    @if (User.IsInRole("Organizer"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Room.Id" class="btn rounded-sm btn-success">Edit</a>
    }
    <a asp-controller="EventCenter" asp-action="Details" asp-route-id="@Model.Room.EventCenterId" class="btn rounded-sm btn-light">GoBack</a>
</div>

<br />
<br />

<div>
    <h4>Events in this Room</h4>
    @if (Model.Room.Events.Count > 0)
    {
        <div class="card-columns">
            @foreach (var item in Model.Room.Events)
            {
                @if (User.IsInRole("Organizer") || DateTime.Compare(item.EndDate, DateTime.Now) > 0)
                {
                    <div class="card rounded-sm text-white bg-primary mb-3" style="max-width: 20rem;">
                    <div class="card-header">
                        Begins on
                        @Html.DisplayFor(modelItem => item.StartDate.DayOfWeek)
                        @Html.DisplayFor(modelItem => item.StartDate.Day) /
                        @Html.DisplayFor(modelItem => item.StartDate.Month) /
                        @Html.DisplayFor(modelItem => item.StartDate.Year)
                    </div>
                    <div class="card-body">
                        <a asp-controller="@item.GetEventType()" asp-action="Details" asp-route-id="@item.Id" >
                            <h4 class="card-title text-white">
                                @Html.DisplayFor(modelItem => item.Name)
                            </h4>
                        </a>
                        <p class="card-text"> Start: @Html.DisplayFor(modelItem => item.StartDate)</p>
                        <p class="card-text"> End: @Html.DisplayFor(modelItem => item.EndDate)</p>
                    </div>
                     @if (User.IsInRole("Organizer"))
                     {
                         <div class="card-footer">
                             <a asp-controller="@item.GetEventType()" asp-action="Edit" asp-route-id="@item.Id" class="btn rounded-sm btn-success">Edit</a>
                             <a asp-controller="@item.GetEventType()" asp-action="Delete" asp-route-id="@item.Id" class="btn rounded-sm btn-danger">Delete</a>
                         </div>
                     }
                </div>
                }
            }
        </div>
    }
    else
    {
        <p>This Room does not have any Events yet.</p>
    }
    @if (User.IsInRole("Organizer"))
    {
        <a asp-action="ChooseEventType" asp-route-id="@Model.Room.Id" class="btn rounded-sm btn-primary">Create a new Event</a>
    }
    
</div>