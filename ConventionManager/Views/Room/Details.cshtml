@model ConventionManager.Models.ConferenceEventAndRoom

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@if (TempData["DateOutOfRange"] != null)
{
 <p class="alert alert-warning alert-dismissible" id="errorMessage">@TempData["DateOutOfRange"]</p>
}
@if (TempData["EventCollision"] != null)
{
 <p class="alert alert-warning alert-dismissible" id="errorMessage">@TempData["EventCollision"]</p>
}

<div>
    <h4>Room</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Capacity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Capacity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Room.Location)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Room.Location)
        </dd>
        <dt class="col-sm-2">Map</dt>
        <dd class="col-sm-10">
            <div id="map" style="height:300px; width:80%;"></div>
            <script>
              var map;
              function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                  center: { lat: @Model.Room.Latitude, lng: @Model.Room.Longitude },
                  zoom: 16
                });
              }
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAgNFNMm7c0Y9YCYz0cNE12ZzEgScMp89g&callback=initMap"
            async defer></script>
        </dd>
    </dl>
</div>
<div>
    @if (User.IsInRole("Organizer"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Room.Id" class="btn btn-success">Edit</a>
    }
    <a asp-controller="EventCenter" asp-action="Details" asp-route-id="@Model.Room.EventCenterId" class="btn btn-secondary">Back to List</a>
</div>

<br />
<br />

<div>
    <h4>Events in this Room</h4>
    @if (Model.Room.Events.Count > 0)
    {
        <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Event.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Event.StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Event.EndDate)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Room.Events) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                    </td>
                    <td width="30%">
                        <a asp-controller=@item.GetEventType() asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary">Details</a>
                        @if (User.IsInRole("Organizer"))
                        {
                            <a asp-controller=@item.GetEventType() asp-action="Edit" asp-route-id="@item.Id" asp-route-fromWhere="Room" class="btn btn-success">Edit</a>
                            <a asp-controller=@item.GetEventType() asp-action="Delete" asp-route-id="@item.Id" asp-route-fromWhere="Room" class="btn btn-danger">Delete</a>
                        }
                    </td>
                </tr>
        }
            </tbody>
        </table>
    }
    else
    {
        <p>This Room does not have any Events yet. You can create one below.</p>
    }
    @if (User.IsInRole("Organizer"))
    {
        <a asp-action="ChooseEventType" asp-route-id="@Model.Room.Id" class="btn btn-primary">Create a new Event</a>
    }
    
</div>